When would you want to use a remote repository rather than keeping all your work local?

when you want to actively share the proyect with other users in internet

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

because many of the changes introduced will be in your local machine, even when you are off-line. so pulling constantly from the on line repository would be non sense. If the online repository is public and it has been modify, you migth want to see which are the commits manually before pulling them to your work.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

forks are copies inside github platform allowing sharing code from different computers, clones are to communicate github with the local machine, or to copy within it, and a branch is 
a new segment on a string of commits. they are usefull in their enviroments. 

What is the benefit of having a copy of the last known state of the remote stored locally?

when working collaborately, and simoultaneously you may not want your code to be changing constantly by other users, but to have a stable version on wich you can work or study, this way i can compare
separately if my work is compatible wuth the team or proyect, all adding to the big result.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

using platforms like google docs, and working organized in groups, with fluent communication and trust.Git and GitHub allows colaboration from your own desk, wich helps in long distance work, and eliminates physical barriers

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

when you are working colaborately in a experimental feature, or when you are supervising others work, or when yo ask for an opinion or changa to a coworker. The final objective is to present a complete master, but in the way many things can be shared to improve their specific features, so every branch no matter how big can it be could be made better by this kind of collaboration.